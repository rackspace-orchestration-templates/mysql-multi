heat_template_version: 2013-05-23

description: |
  Multiple Linux servers with [MySQL 5.5](http://www.mysql.com/) and
  local database backups configured on the Master node with
  [Holland](https://github.com/holland-backup/holland#readme).

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - image

- label: MySQL Settings
  parameters:
  - slave_count

- label: rax-dev-params
  parameters:
  - master_hostname
  - slave_hostnames
  - kitchen
  - chef_version
  - child_template

parameters:

  master_hostname:
    label: Server Hostname
    description: Host name to give the Master Server
    type: string
    default: mysql-master
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  slave_hostnames:
    label: Slave Hostnames
    description: MySQL Slave node hostnames
    type: string
    default: mysql-slave-%index%

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  slave_count:
    label: Slave Nodes
    description: Number of slave nodes to tie into the MySQL Master server
    type: number
    default: 1

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rackspace-orchestration-templates/mysql-multi

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.12.8

  child_template:
    label: Slave Template
    description: Template to use for all Slave Nodes
    type: string
    default: https://raw.githubusercontent.com/rackspace-orchestration-templates/mysql-multi/stable/mysql-slave.yaml

resources:
  mysql_root_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_repl_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_debian_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  master_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: master_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  master_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: master_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [master_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        hollandbackup:
          main:
            backup_directory: "/var/lib/mysqlbackup"
            mysqldump:
              user: "root"
              host: "localhost"
              password: { get_attr: [mysql_root_password, value] }
        mysql:
          server_root_password: { get_attr: [mysql_root_password, value] }
          server_debian_password: { get_attr: [mysql_debian_password, value] }
          server_repl_password: { get_attr: [mysql_repl_password, value] }
          root_network_acl: ['127.0.0.1', 'localhost']
        rax:
          firewall:
            tcp:
              - 3306
        run_list: ["recipe[apt]",
                   "recipe[mysql::server]",
                   "recipe[mysql-multi::mysql_master]",
                   "recipe[rax-firewall]",
                   "recipe[hollandbackup]",
                   "recipe[hollandbackup::mysqldump]",
                   "recipe[hollandbackup::main]",
                   "recipe[hollandbackup::backupsets]",
                   "recipe[hollandbackup::cron]"]

  slave_nodes:
    type: "OS::Heat::ResourceGroup"
    depends_on: master_server_setup
    properties:
      count: { get_param: slave_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          slave_hostname: { get_param: slave_hostnames }
          image: { get_param: image }
          flavor: { get_param: flavor }
          master: { get_attr: [master_server, networks, private, 0] }
          mysql_root_password: { get_attr: [mysql_root_password, value] }
          mysql_repl_password: { get_attr: [mysql_repl_password, value] }
          mysql_debian_password: { get_attr: [mysql_debian_password, value] }
          ssh_keypair_name: { get_resource: ssh_key }
          ssh_private_key: { get_attr: [ssh_key, private_key] }
          ssh_public_key: { get_attr: [ssh_key, public_key] }
          kitchen: { get_param: kitchen }
          chef_version: { get_param: chef_version }
          parent_stack_id: { get_param: "OS::stack_id" }

  master_slave_grants:
    type: "OS::Heat::ChefSolo"
    depends_on: slave_nodes
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [master_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        mysql:
          server_root_password: { get_attr: [mysql_root_password, value] }
          server_debian_password: { get_attr: [mysql_debian_password, value] }
          server_repl_password: { get_attr: [mysql_repl_password, value] }
          root_network_acl: ['127.0.0.1', 'localhost']
        mysql-multi:
          slaves: { get_attr: [slave_nodes, privateIPv4] }
        rax:
          firewall:
            tcp:
              - 3306
        run_list: ["recipe[apt]",
                   "recipe[mysql::server]",
                   "recipe[mysql-multi::mysql_master]",
                   "recipe[rax-firewall]"]
outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  server_ip:
    description: Master Server IP
    value: { get_attr: [master_server, accessIPv4] }

  slave_ips:
    description: Slave Node IPs
    value: { get_attr: [slave_nodes, accessIPv4] }

  mysql_root_password:
    description: MySQL Root Password
    value: { get_attr: [mysql_root_password, value] }
